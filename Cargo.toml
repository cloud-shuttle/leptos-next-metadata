[package]
name = "leptos-next-metadata"
version = "1.4.0"
edition = "2021"
authors = ["Peter Hanssens <peter@cloudshuttle.com.au>"]
description = "Next.js-style metadata management for Leptos v0.8+ with type-safe APIs, blazing-fast OG image generation, and AI-assisted development. Part of the Cloud Shuttle ecosystem."
license = "MIT OR Apache-2.0"
repository = "https://github.com/cloud-shuttle/leptos-next-metadata"
homepage = "https://github.com/cloud-shuttle/leptos-next-metadata"
documentation = "https://docs.rs/leptos-next-metadata"
keywords = ["leptos", "metadata", "seo", "og-image", "web"]
categories = ["web-programming", "asynchronous"]
readme = "README.md"
date = "2025-09-03"

[workspace]
resolver = "2"
members = ["macros"]

[profile.dev]
incremental = true
debug = 1
opt-level = 0

[profile.release]
lto = "thin"
codegen-units = 1
panic = "abort"
strip = true

[profile.release-lto]
inherits = "release"
lto = "fat"
codegen-units = 1

[profile.bench]
inherits = "release"
debug = false

[dependencies]
# Core dependencies
leptos = { version = "0.8", features = ["ssr"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", optional = true }
thiserror = "1.0"
anyhow = "1.0"
async-trait = "0.1"
futures = "0.3"
once_cell = "1.0"
parking_lot = "0.12"
chrono = { version = "0.4", features = ["serde"] }
url = "2.0"
regex = "1.0"
urlencoding = "2.1"
leptos_meta = { version = "0.8", features = ["ssr"] }
leptos_router = { version = "0.8", features = ["ssr"] }
leptos-next-metadata-macros = { path = "./macros", version = "1.0.0", optional = true }

# Optional dependencies (server-only)
mime_guess = { version = "2.0", optional = true }
walkdir = { version = "2.0", optional = true }
reqwest = { version = "0.11", optional = true, features = ["json"] }
cached = { version = "0.45", optional = true }
lru = { version = "0.12", optional = true }
tempfile = { version = "3.0", optional = true }
openapiv3 = { version = "1.0", optional = true }
validator = { version = "0.18", features = ["derive"], optional = true }
serde_yaml = { version = "0.9", optional = true }
webp = { version = "0.2", optional = true }
axum = { version = "0.7", optional = true }
tower = { version = "0.4", optional = true }

# Procedural macro dependencies
proc-macro2 = { version = "1.0", optional = true }
quote = { version = "1.0", optional = true }
syn = { version = "2.0", features = ["full"], optional = true }

# WASM-specific dependencies
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
wasm-bindgen-test = "0.3"
web-sys = { version = "0.3", features = [
    "console",
    "Document",
    "Element",
    "HtmlElement",
    "HtmlMetaElement",
    "HtmlLinkElement",
    "HtmlCanvasElement",
    "CanvasRenderingContext2d",
    "Window",
    "Storage",
    "Navigator",
    "Screen",
    "Location",
    "Performance",
    "Worker",
    "ServiceWorker",
    "IntersectionObserver",
    "ResizeObserver",
    "Geolocation",
    "DeviceOrientationEvent",
    "TouchEvent",
    "PointerEvent",
] }
js-sys = "0.3"
serde-wasm-bindgen = "0.6"
base64 = "0.22"

# Server-only dependencies (exclude from WASM)
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.38", features = ["full"], optional = true }
liquid = { version = "0.26", optional = true }
image = { version = "0.25", optional = true }
resvg = { version = "0.36", optional = true }
usvg = { version = "0.36", optional = true }
tiny-skia = { version = "0.11", optional = true }
fontdue = { version = "0.8", optional = true }

[dev-dependencies]
criterion = "0.5"
proptest = "1.0"
mockall = "0.12"

# Server-only dev dependencies
[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio-test = "0.4"
tempfile = "3.0"
axum = "0.7"
tower = "0.4"
tower-http = { version = "0.5", features = ["fs", "cors"] }

[features]
default = ["ssr", "og-images", "file-conventions", "macros", "json-ld"]
ssr = ["leptos/ssr", "tokio"]
csr = ["leptos/csr"]
hydrate = ["leptos/hydrate"]
og-images = ["image", "resvg", "usvg", "tiny-skia", "fontdue", "liquid"]
file-conventions = ["walkdir", "mime_guess", "image"]
json-ld = ["serde_json"]
caching = ["cached", "lru"]
http = ["reqwest"]
macros = ["leptos-next-metadata-macros", "proc-macro2", "quote", "syn"]
debug = []
api-contracts = ["openapiv3", "validator", "serde_yaml", "axum", "tower"]
webp-support = ["webp"]

# WASM-specific features
wasm = ["csr", "json-ld", "macros", "basic-caching"]
wasm-advanced = ["wasm", "canvas-og-images", "web-storage"]
basic-caching = []
canvas-og-images = []
web-storage = []

[lib]
name = "leptos_next_metadata"
path = "src/lib.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Project status metadata
[package.metadata]
project_status = "Beta Release"
release_target = "Q4 2025"
leptos_version = "0.8+"
rust_version = "1.75+"
last_updated = "2025-09-03"
completed_features = [
    "Core metadata structures and types",
    "metadata! macro for static metadata",
    "generate_metadata! macro for dynamic metadata",
    "Basic OpenGraph and Twitter Card support",
    "JSON-LD foundation with conditional compilation",
    "Procedural macro system",
    "Integration with Leptos 0.8+ signal system",
    "File convention scanning",
    "Comprehensive testing suite (93 unit tests + 4 doc tests)",
    "Cross-browser compatibility testing",
    "Advanced caching strategies with LRU and TTL",
    "Performance optimizations and benchmarks",
    "JSON-LD field naming compliance (all warnings fixed)",
    "E2E testing infrastructure with Playwright",
    "Complete documentation and examples"
]
in_progress_features = [
    "Final beta release preparation",
    "Performance benchmarking and optimization"
]
planned_features = [
    "v1.0 stable release",
    "Advanced template system",
    "Visual metadata editor",
    "Automated SEO auditing"
]
